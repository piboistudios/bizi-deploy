steps:
  # - name: node:16.18.0
  # args: ["replace-npmrc", "$PROJECT_ID"]
  - name: node:16.18.0
    entrypoint: npm
    args:
      ["run", "artifactregistry-login", "--", '--credential-config="./.npmrc"']
  - name: node:16.18.0
    args: ["print-npmrc"]

  - name: node:16.18.0
    entrypoint: npm
    args: ["install", "yargs", "debug", "handlebars", "handlebars-helpers"]
  - name: node:16.18.0
    env:
      - "DEBUG=*"
    args:
      - "gke/compile-k8s"
      - "--in=gke/Service.template.yaml"
      - "--out=gke/resources/Service.yaml"
  - name: node:16.18.0
    env:
      - "DEBUG=*"
    args:
      - "gke/compile-k8s"
      - "--in=gke/ManagedCert.template.yaml"
      - '--hostname="${_HOSTNAME}"'
      - "--out=gke/resources/ManagedCert.yaml"
  - name: node:16.18.0
    env:
      - "DEBUG=*"
    args:
      - "gke/compile-k8s"
      - "--projectId=$PROJECT_ID"
      - "--in=gke/Deployment.template.yaml"
      - "--out=gke/resources/Deployment.yaml"
      - "--tag=$SHORT_SHA"
      - '--set-env="DEBUG=${_DEBUG}"'
      - '--set-env="DB_USER=${_DB_USER}"'
      - '--set-env="DB_PASS=${_DB_PASS}"'
      - '--set-env="DB_ADDR=${_DB_ADDR}"'
      - '--set-env="DB_PORT=${_DB_PORT}"'
      - '--set-env="DB_NAME=${_DB_NAME}"'
      - '--set-env="ACME_DIRECTORY=${_ACME_DIRECTORY}"'
      - '--set-env="ACME_ENVIRONMENT=${_ACME_ENVIRONMENT}"'
      - '--set-env="DB_AUTH_SOURCE=${_DB_AUTH_SOURCE}"'
      - '--set-env="DEBUG_DEPTH=${_DEBUG_DEPTH"'
      - '--set-env="BASE_URI=${_BASE_URI}"'
      - '--set-env="GATE_URI=${_GATE_URI}"'
      - '--set-env="GATE_API_KEY=${_GATE_API_KEY}"'
      - '--set-env="SECRET_PROJECT_ID=${_SECRET_PROJECT_ID}"'
      - '--set-env="AKASH_NET=${_AKASH_NET}"'
      - '--set-env="DEPLOYMENT_STATUS_BACKOFF_IN_SECONDS=${_DEPLOYMENT_STATUS_BACKOFF_IN_SECONDS}"'
      - '--set-env="IPFS_GATEWAY_HOST=${IPFS_GATEWAY_HOST}"'
      - '--set-env="WEB3_STORAGE_TOKEN=${WEB3_STORAGE_TOKEN}"'
      - '--set-env="AKASH_ACCOUNT_NAME=${_AKASH_ACCOUNT_NAME}"'
      - '--set-env="PRIMARY_MX_HOST=${_PRIMARY_MX_HOST}"'
      - '--set-env="PORT=8082"'
  - name: "gcr.io/cloud-builders/docker"
    args:
      - "build"
      - "--build-arg"
      - "PROJECT_ID=$PROJECT_ID"
      - "--build-arg"
      - "PORT=${_PORT}"
      - "-t"
      - "us-central1-docker.pkg.dev/$PROJECT_ID/bizi-docker-images/bizi-deploy:$SHORT_SHA"
      - "."
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "push",
        "us-central1-docker.pkg.dev/$PROJECT_ID/bizi-docker-images/bizi-deploy:$SHORT_SHA",
      ]
  - name: "gcr.io/cloud-builders/gke-deploy"
    args:
      - run
      - --filename=gke/resources/
      - --location=us-central1-a
      - --cluster=$BRANCH_NAME-$PROJECT_ID
images:
  - "us-central1-docker.pkg.dev/$PROJECT_ID/bizi-docker-images/bizi-deploy:$SHORT_SHA"
